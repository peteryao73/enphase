//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class EnphaseMonthlyProduction {
    public static void consumeObject(JSONParser parser) {
        Integer depth = 0;
        do {
            JSONToken curr = parser.getCurrentToken();
            if (curr == JSONToken.START_OBJECT || 
                curr == JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == JSONToken.END_OBJECT ||
                       curr == JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }

    public class Meta {
        public String status {get;set;} 
        public Integer last_report_at {get;set;} 
        public Integer last_energy_at {get;set;} 
        public Integer operational_at {get;set;} 

        public Meta(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'status') {
                            status = parser.getText();
                        } else if (text == 'last_report_at') {
                            last_report_at = parser.getIntegerValue();
                        } else if (text == 'last_energy_at') {
                            last_energy_at = parser.getIntegerValue();
                        } else if (text == 'operational_at') {
                            operational_at = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Meta consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
	
    public class Meter_readings {
        public String serial_number {get;set;} 
        public Integer start {get;set;} 
        public Integer end_Z {get;set;} // in json: end

        public Meter_readings(JSONParser parser) {
            while (parser.nextToken() != JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != JSONToken.VALUE_NULL) {
                        if (text == 'serial_number') {
                            serial_number = parser.getText();
                        } else if (text == 'start') {
                            start = parser.getIntegerValue();
                        } else if (text == 'end') {
                            end_Z = parser.getIntegerValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Meter_readings consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
	
    public Integer system_id {get;set;} 
    public String start_date {get;set;} 
    public String end_date {get;set;} 
    public Integer production_wh {get;set;} 
    public List<Meter_readings> meter_readings {get;set;} 
    public Meta meta {get;set;} 

    public EnphaseMonthlyProduction(JSONParser parser) {
        while (parser.nextToken() != JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != JSONToken.VALUE_NULL) {
                    if (text == 'system_id') {
                        system_id = parser.getIntegerValue();
                    } else if (text == 'start_date') {
                        start_date = parser.getText();
                    } else if (text == 'end_date') {
                        end_date = parser.getText();
                    } else if (text == 'production_wh') {
                        production_wh = parser.getIntegerValue();
                    } else if (text == 'meter_readings') {
                        meter_readings = new List<Meter_readings>();
                        while (parser.nextToken() != JSONToken.END_ARRAY) {
                            meter_readings.add(new Meter_readings(parser));
                        }
                    } else if (text == 'meta') {
                        meta = new Meta(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'Root consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
	
	
    public static EnphaseMonthlyProduction parse(String json) {
        return new EnphaseMonthlyProduction(System.JSON.createParser(json));
    }
}